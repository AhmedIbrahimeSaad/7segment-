#include "TM4C123GH6PM.h"
#include "TM4C123.h"
#include <stdint.h>


#define SYSCTL_RCGCGPIO_R   (*((volatile int *) 0x400FE608))   
#define GPIO_PORTB_DEN_R    (*((volatile int *) 0x4000551C))
#define GPIO_PORTB_DIR_R    (*((volatile int *) 0x40005400))
#define GPIO_PORTB_DATA_R   (*((volatile int *) 0x400053FC))
#define GPIO_PORTB_AMSEL_R  (*((volatile int *) 0x40005528))
#define GPIO_PORTB_AFSEL_R  (*((volatile int *) 0x40005420))
#define GPIO_PORTB_PCTL_R   (*((volatile int *) 0x4000552C))
#define GPIO_PORTB_PUR_R    (*((volatile int *) 0x40005510))
#define GPIO_PORTB_LOCK_R   (*((volatile int *) 0x40005520))
#define GPIO_PORTB_CR_R     (*((volatile int *) 0x40005524))
#define GPIO_PORTB_CLK_EN  0x02      //enable clock for PORTB

void Delay (int n);
void PORTB_Init(void);
void PORTF_SWS (void);
int main(void)
{

	unsigned char digitPattern[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80};  
	
	volatile unsigned char i;
	PORTB_Init();
	while(1)
	{ 
		if((gpio_po)
		for(i=0;i<9;i++)
		{
			GPIO_PORTB_DATA_R = digitPattern[i];   //display digits from 0 to 9 
			Delay(50);													// delay 1 second between each digit
		}
		
	}
	
	
	
	
int state=0;
switch (state)
{
case 0:

break;
}
	
}
void Delay (int n){
int i,j;
	for(i=0;i<n;i++){
	for(j=0;j<3180;j++);
	}
}

void PORTF_SWS (){
	/*pf0,pf4 for switches*/
	SYSCTL->RCGCGPIO = SYSCTL->RCGCGPIO | (1<<5);   /*gpiof clock is enable*/
	GPIOF->LOCK = 0x4C4F434B;
	GPIOF->CR=0x01;
	GPIOF->DEN =GPIOF->DEN |(1<<0) | (1<<4);
	GPIOF->DIR =GPIOF->DIR &(~(1<<0)) &(~(1<<4));    /*conf p0,4 input*/
	GPIOF->PUR =GPIOF->PUR | (1<<0)| (1<<4);          /*pull up p0,4*/
}
void PORTB_Init(void)
{
	SYSCTL_RCGCGPIO_R |= GPIO_PORTB_CLK_EN;           //activate clock for Port B
  Delay(50);           															//Delay 10 msec to allow clock to start on PORTB  
  GPIO_PORTB_DEN_R = 0xFF;        	  							// Enable all pins of PORTB 
  GPIO_PORTB_DIR_R = 0xFF;        	  							// Make all pins of PORTB as ouptut pin
	GPIO_PORTB_PCTL_R &= ~(0xFF) ; 										// Regular GPIO of PORTB
  GPIO_PORTB_AMSEL_R &= ~(0xFF);        						// Disable analog function on all pins of PORTB
	GPIO_PORTB_AFSEL_R &= ~(0xFF);        						// Regular port function
}


////************* 7seg {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}***************///////
///void switch_state(){
//switch(state){
//	case 0:
 // GPIO_PORTB_DATA_R = 0x3F;
//	Delay (20);
//  break;
///////	case 1:
///////  GPIO_PORTB_DATA_R = 0x06;
///////	Delay (20);
///////  break;
///////	case 2:
 /////// GPIO_PORTB_DATA_R = 0x5B;
///////	Delay (20);
///////  break;
///////	case 3:
 /////// GPIO_PORTB_DATA_R = 0x4F;
///////	Delay (20);
///////  break;
///////	case 4:
///////  GPIO_PORTB_DATA_R = 0x66;
///////	Delay (20);
 /////// break;
///////	case 5:
 /////// GPIO_PORTB_DATA_R = 0x6D;
///////	Delay (20);
 /////// break;
	///////case 6:
 /////// GPIO_PORTB_DATA_R = 0x7D;
	///////Delay (20);
  ///////break;
///////	case 7:
 /////// GPIO_PORTB_DATA_R = 0x07;
///////	Delay (20);
 /////// break;
	///////case 8:
 /////// GPIO_PORTB_DATA_R = 0x7F;
	///////Delay (20);
 /////// break;
	
///////}

///////}///////DATA = 0X3E&0X02


//	void PORTB_Init(void)
//{
	///SYSCTL_RCGCGPIO_R |= GPIO_PORTB_CLK_EN;           //activate clock for Port B
 // Delay(10);           															//Delay 10 msec to allow clock to start on PORTB  
 // GPIO_PORTB_DEN_R = 0xFF;        	  							// Enable all pins of PORTB 
 // GPIO_PORTB_DIR_R = 0xFF;        	  							// Make all pins of PORTB as ouptut pin
	//GPIO_PORTB_PCTL_R &= ~(0xFF) ; 										// Regular GPIO of PORTB
 // GPIO_PORTB_AMSEL_R &= ~(0xFF);        						// Disable analog function on all pins of PORTB
	//GPIO_PORTB_AFSEL_R &= ~(0xFF);        						// Regular port function
////}



//////********************the all adress for enable cluk for port***************/////
/*#define SYSCTL_RCGCGPIO_R   (*((volatile int *) 0x400FE608))   
#define GPIO_PORTB_DEN_R    (*((volatile int *) 0x4000551C))
#define GPIO_PORTB_DIR_R    (*((volatile int *) 0x40005400))
#define GPIO_PORTB_DATA_R   (*((volatile int *) 0x400053FC))
#define GPIO_PORTB_AMSEL_R  (*((volatile int *) 0x40005528))
#define GPIO_PORTB_AFSEL_R  (*((volatile int *) 0x40005420))
#define GPIO_PORTB_PCTL_R   (*((volatile int *) 0x4000552C))
#define GPIO_PORTB_PUR_R    (*((volatile int *) 0x40005510))
#define GPIO_PORTB_LOCK_R   (*((volatile int *) 0x40005520))
#define GPIO_PORTB_CR_R     (*((volatile int *) 0x40005524))
#define GPIO_PORTB_CLK_EN  0x02      //enable clock for PORTB 0x400FE608+0x02 for port b 
//void PORTB_Init(void);*/


